{
    "swagger": "2.0",
    "info": {
        "title": "Testhub universities  API",
        "description": "API for Testhub universities.\n",
        "version": "1.0.3",
        "contact": {
            "email": "superalibek123@gmail.com"
        }
    },
    "basePath": "/api",
    "paths": {
        "/cities/": {
            "get": {
                "tags": [
                    "cities"
                ],
                "description": "Получение списка всех городов на указанном языке.\n\u003cbr\u003e",
                "operationId": "CityController.GetAll",
                "parameters": [
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список городов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.City"
                            }
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка получения списка или другая ошибка\""
                    }
                }
            },
            "post": {
                "tags": [
                    "cities"
                ],
                "description": "Создание нового города.\n\u003cbr\u003e",
                "operationId": "CityController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с данными о городе",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"id\": 1} \"ID созданного города\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка разбора JSON или другая ошибка\""
                    }
                }
            }
        },
        "/cities/info/{id}": {
            "get": {
                "tags": [
                    "cities"
                ],
                "description": "Получение информации о городе с университетами по ID.\n\u003cbr\u003e",
                "operationId": "CityController.GetWithUniversities",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID города для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о городе с университетами\"",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            }
        },
        "/cities/search": {
            "get": {
                "tags": [
                    "cities"
                ],
                "description": "Поиск городов по имени.\n\u003cbr\u003e",
                "operationId": "CityController.SearchCities",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Имя города для поиска",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список найденных городов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CityResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка поиска или другая ошибка\""
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "tags": [
                    "cities"
                ],
                "description": "Получение информации о городе по ID.\n\u003cbr\u003e",
                "operationId": "CityController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID города для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о городе\"",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            },
            "put": {
                "tags": [
                    "cities"
                ],
                "description": "Обновление информации о городе по ID.\n\u003cbr\u003e",
                "operationId": "CityController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID города для обновления информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с обновленными данными о городе",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string \"Обновление успешно выполнено\""
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID, ошибка разбора JSON или другая ошибка\""
                    }
                }
            }
        },
        "/quotas/": {
            "get": {
                "tags": [
                    "quotas"
                ],
                "description": "Получение списка всех квот.\n\u003cbr\u003e",
                "operationId": "QuotaController.GetAll",
                "parameters": [
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список квот\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotaResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка получения списка или другая ошибка\""
                    }
                }
            },
            "post": {
                "tags": [
                    "quotas"
                ],
                "description": "Создание новой квоты.\n\u003cbr\u003e",
                "operationId": "QuotaController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с данными о квоте",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Quota"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID созданной квоты\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка разбора JSON или другая ошибка\""
                    }
                }
            }
        },
        "/quotas/with-specialities/{id}": {
            "get": {
                "tags": [
                    "quotas"
                ],
                "description": "Получение информации о квоте со специальностями по ID.\n\u003cbr\u003e",
                "operationId": "QuotaController.GetWithSpecialitiesById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID квоты для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о квоте со специальностями\"",
                        "schema": {
                            "$ref": "#/definitions/QuotaResponse"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            }
        },
        "/quotas/{id}": {
            "get": {
                "tags": [
                    "quotas"
                ],
                "description": "Получение информации о квоте по ID.\n\u003cbr\u003eПолучение информации о квоте по ID.\n\u003cbr\u003e",
                "operationId": "QuotaController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID квоты для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID квоты для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о квоте\"",
                        "schema": {
                            "$ref": "#/definitions/QuotaResponse"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            },
            "put": {
                "tags": [
                    "quotas"
                ],
                "description": "Обновление информации о квоте по ID.\n\u003cbr\u003e",
                "operationId": "QuotaController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID квоты для обновления информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с обновленными данными о квоте",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Quota"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string \"Обновление успешно выполнено\""
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID, ошибка разбора JSON или другая ошибка\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "quotas"
                ],
                "description": "Удаление квоты по ID.\n\u003cbr\u003e",
                "operationId": "QuotaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID квоты для удаления",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string \"Удаление успешно выполнено\""
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            }
        },
        "/quotas/{quotaId}/specialities/{specialityId}": {
            "post": {
                "tags": [
                    "quotas"
                ],
                "description": "Добавление специальности к квоте по их ID.\n\u003cbr\u003e",
                "operationId": "QuotaController.AddSpecialityToQuota",
                "parameters": [
                    {
                        "in": "path",
                        "name": "quotaId",
                        "description": "ID квоты",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "specialityId",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string \"Добавление успешно выполнено\""
                    },
                    "400": {
                        "description": "{string} string \"400 некорректный ID или другая ошибка\""
                    }
                }
            }
        },
        "/quotasall/{id}": {
            "get": {
                "tags": [
                    "quotas"
                ],
                "description": "Получение списка всех квот со специальностями.\n\u003cbr\u003e",
                "operationId": "QuotaController.GetAllWithSpecialities",
                "parameters": [
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список квот со специальностями\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/QuotaResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка получения списка или другая ошибка\""
                    }
                }
            }
        },
        "/services/": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "Get all services\n\u003cbr\u003e",
                "operationId": "ServiceController.GetAllServices",
                "parameters": [
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceResponseForUser"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "services"
                ],
                "description": "Add a new service\n\u003cbr\u003e",
                "operationId": "ServiceController.AddService",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "NameRu",
                        "description": "Service name in Russian",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "NameKz",
                        "description": "Service name in Kazakh",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Image",
                        "description": "Service image",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.Service.Id"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/services/all": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "Get all services without language filtering\n\u003cbr\u003e",
                "operationId": "ServiceController.GetAllServicesForAdmin",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceResponseForAdmin"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/services/search": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "Search for services by name\n\u003cbr\u003e",
                "operationId": "ServiceController.SearchServices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "prefix",
                        "description": "Prefix for service name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceResponseForUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/services/university/{id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "Get services by university ID\n\u003cbr\u003e",
                "operationId": "ServiceController.GetServicesByUniversityIdForAdmin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceResponseForAdmin"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "tags": [
                    "services"
                ],
                "description": "Get service by ID\n\u003cbr\u003e",
                "operationId": "ServiceController.GetServiceById",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Service ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceResponseForUser"
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "services"
                ],
                "description": "Update service information\n\u003cbr\u003e",
                "operationId": "ServiceController.UpdateService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Service ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Service data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Service"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Update successful\""
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "services"
                ],
                "description": "Delete a service by ID\n\u003cbr\u003e",
                "operationId": "ServiceController.DeleteService",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Service ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Delete successful\""
                    },
                    "400": {
                        "description": "Invalid service ID"
                    }
                }
            }
        },
        "/services/{serviceId}/university/{universityId}": {
            "post": {
                "tags": [
                    "services"
                ],
                "description": "Add a service to a university\n\u003cbr\u003e",
                "operationId": "ServiceController.AddServiceToUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "description": "Service ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Add successful\""
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/specialities/": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Получение списка всех специальностей.\n\u003cbr\u003e",
                "operationId": "SpecialityController.GetAll",
                "responses": {
                    "200": {
                        "description": "\"Список специальностей\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Speciality"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка получения списка или другая ошибка"
                    }
                }
            },
            "post": {
                "tags": [
                    "specialities"
                ],
                "description": "Create a new speciality.\n\u003cbr\u003e",
                "operationId": "SpecialityController.Create",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "NameRu",
                        "description": "Name of the speciality in Russian",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "NameKz",
                        "description": "Name of the speciality in Kazakh",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationRu",
                        "description": "Abbreviation of the speciality in Russian",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationKz",
                        "description": "Abbreviation of the speciality in Kazakh",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Subject_1",
                        "description": "ID of the first subject",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "Subject_2",
                        "description": "ID of the second subject",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "Degree",
                        "description": "Degree of the speciality",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Code",
                        "description": "Code of the speciality",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionRu",
                        "description": "Description of the speciality in Russian",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionKz",
                        "description": "Description of the speciality in Kazakh",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Scholarship",
                        "description": "Whether the speciality has a scholarship",
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID of the created speciality\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "{string} string \"JSON parsing error or other error\""
                    }
                }
            }
        },
        "/specialities/addPointStat/{universityId}/{specialityId}": {
            "post": {
                "tags": [
                    "specialities"
                ],
                "description": "Добавление статистики по баллам для специальности и университета.\n\u003cbr\u003e",
                "operationId": "SpecialityController.AddPointStat",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "specialityId",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с данными о статистике по баллам",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PointStat"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID добавленной статистики\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "ошибка разбора JSON или другая ошибка"
                    }
                }
            }
        },
        "/specialities/associatePair/{speciality_id}/{subject_pair_id}": {
            "put": {
                "tags": [
                    "specialities"
                ],
                "description": "связывает специальность с парой предметов\n\u003cbr\u003e",
                "operationId": "SpecialityController.AssociateSpecialityWithSubjectPair",
                "parameters": [
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "subject_pair_id",
                        "description": "ID пары предметов",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SubjectPair"
                        }
                    },
                    "400": {
                        "description": "\"Invalid input\""
                    },
                    "404": {
                        "description": "\"SubjectPair not found\""
                    }
                }
            }
        },
        "/specialities/byspec/{speciality_id}": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Получение всех пар предметов для заданной специальности.\n\u003cbr\u003e",
                "operationId": "SpecialityController.GetSubjectPairsBySpecialityId",
                "parameters": [
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для фильтрации",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список пар предметов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubjectPair"
                            }
                        }
                    },
                    "400": {
                        "description": "\"Некорректный ввод\""
                    },
                    "404": {
                        "description": "\"Пары предметов не найдены\""
                    }
                }
            }
        },
        "/specialities/bysubjects/{subject1_id}/{subject2_id}": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "получает специальность по ID первого и второго предметов\n\u003cbr\u003e",
                "operationId": "SpecialityController.GetSpecialityBySubjectPair",
                "parameters": [
                    {
                        "in": "path",
                        "name": "subject1_id",
                        "description": "ID первого предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "subject2_id",
                        "description": "ID второго предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Speciality"
                        }
                    },
                    "400": {
                        "description": "\"Invalid input\""
                    },
                    "404": {
                        "description": "\"Speciality not found\""
                    }
                }
            }
        },
        "/specialities/byuni/{universityId}": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Получение списка специальностей, связанных с университетом.\n\u003cbr\u003e",
                "operationId": "SpecialityController.GetSpecialitiesInUni",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список специальностей университета\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GetByUniResponseForAdm"
                            }
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/specialities/deletePointStat/{id}": {
            "delete": {
                "tags": [
                    "specialities"
                ],
                "description": "Удаление статистики по баллам для специальности и университета.\n\u003cbr\u003e",
                "operationId": "SpecialityController.DeletePointStat",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID статистики по баллам",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Сообщение об успешном удалении\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]string"
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/specialities/pointstatsbyparams/{universityId}/{specialityId}": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Получение статистики по баллам для специальности и университета.\n\u003cbr\u003e",
                "operationId": "SpecialityController.GetPointStatsByUniversityAndSpeciality",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "specialityId",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список статистики по баллам\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PointStat"
                            }
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/specialities/search": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Выполнение поиска специальностей с использованием фильтров и пагинации.\n\u003cbr\u003e",
                "operationId": "SpecialityController.SearchSpecialities",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Префикс имени специальности для поиска",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "subject1_id",
                        "description": "ID первого предмета для фильтрации",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "subject2_id",
                        "description": "ID второго предмета для фильтрации",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "university_id",
                        "description": "ID университета для фильтрации",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Номер страницы для пагинации",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "per_page",
                        "description": "Количество элементов на странице",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для фильтрации",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Результаты поиска со специальностями\"",
                        "schema": {
                            "$ref": "#/definitions/models.SpecialitySearchResult"
                        }
                    },
                    "400": {
                        "description": "\"Ошибка поиска или другая ошибка\""
                    }
                }
            }
        },
        "/specialities/{id}": {
            "get": {
                "tags": [
                    "specialities"
                ],
                "description": "Получение информации о специальности по ID.\n\u003cbr\u003e",
                "operationId": "SpecialityController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID специальности для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о специальности\"",
                        "schema": {
                            "$ref": "#/definitions/models.Speciality"
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            },
            "put": {
                "tags": [
                    "specialities"
                ],
                "description": "Update the information of a speciality by its ID.\n\u003cbr\u003e",
                "operationId": "SpecialityController.Update Speciality",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID of the speciality to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "NameRu",
                        "description": "Updated name of the speciality in Russian",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "NameKz",
                        "description": "Updated name of the speciality in Kazakh",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationRu",
                        "description": "Updated abbreviation of the speciality in Russian",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationKz",
                        "description": "Updated abbreviation of the speciality in Kazakh",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Degree",
                        "description": "Updated degree of the speciality",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Code",
                        "description": "Updated code of the speciality",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionRu",
                        "description": "Updated description of the speciality in Russian",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionKz",
                        "description": "Updated description of the speciality in Kazakh",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Scholarship",
                        "description": "Updated scholarship status of the speciality",
                        "type": "boolean"
                    },
                    {
                        "in": "formData",
                        "name": "Subject_1",
                        "description": "Updated ID of the first subject",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "Subject_2",
                        "description": "Updated ID of the second subject",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} string \"Update successful\""
                    },
                    "400": {
                        "description": "{string} string \"Invalid input or other error\""
                    }
                }
            },
            "delete": {
                "tags": [
                    "specialities"
                ],
                "description": "Удаление специальности по ID.\n\u003cbr\u003e",
                "operationId": "SpecialityController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID специальности для удаления",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Удаление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/subjectpairs/": {
            "get": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Получение списка всех пар предметов.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.GetAll",
                "responses": {
                    "200": {
                        "description": "\"Список пар предметов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubjectPair"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка получения списка или другая ошибка"
                    }
                }
            }
        },
        "/subjectpairs/add/{firstSubjectId}/{secondSubjectId}": {
            "post": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Создание новой пары предметов.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.Add",
                "parameters": [
                    {
                        "in": "path",
                        "name": "firstSubjectId",
                        "description": "ID первого предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "secondSubjectId",
                        "description": "ID второго предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID созданной пары предметов\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/subjectpairs/get/{firstSubjectId}/{secondSubjectId}": {
            "get": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Получение ID пары предметов по ID первого и второго предмета.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.GetBySubjectIds",
                "parameters": [
                    {
                        "in": "path",
                        "name": "firstSubjectId",
                        "description": "ID первого предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "secondSubjectId",
                        "description": "ID второго предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID пары предметов\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int"
                        }
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/subjectpairs/{id}": {
            "get": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Получение информации о паре предметов по ID.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID пары предметов для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о паре предметов\"",
                        "schema": {
                            "$ref": "#/definitions/models.SubjectPair"
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            },
            "delete": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Удаление пары предметов по ID.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID пары предметов для удаления",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Удаление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/subjectpairs/{id}/{firstSubjectId}/{secondSubjectId}": {
            "put": {
                "tags": [
                    "subjectpairs"
                ],
                "description": "Обновление информации о паре предметов по ID.\n\u003cbr\u003e",
                "operationId": "SubjectPairController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID пары предметов для обновления информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "firstSubjectId",
                        "description": "ID первого предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "secondSubjectId",
                        "description": "ID второго предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Обновление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/subjects/": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "description": "Получение списка всех предметов.\n\u003cbr\u003e",
                "operationId": "SubjectController.GetAll",
                "parameters": [
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список предметов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubjectResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка получения списка или другая ошибка"
                    }
                }
            },
            "post": {
                "tags": [
                    "subjects"
                ],
                "description": "Создание нового предмета.\n\u003cbr\u003e",
                "operationId": "SubjectController.Create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с данными о предмете",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"ID созданного предмета\"",
                        "schema": {
                            "$ref": "#/definitions/map[string]int64"
                        }
                    },
                    "400": {
                        "description": "ошибка разбора JSON или другая ошибка"
                    }
                }
            }
        },
        "/subjects/search": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "description": "Поиск предметов по имени.\n\u003cbr\u003e",
                "operationId": "SubjectController.SearchSubjectsByName",
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Имя предмета для поиска",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список найденных предметов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubjectResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка поиска или другая ошибка"
                    }
                }
            }
        },
        "/subjects/secubjects/{firstSubjectId}": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "description": "Получение списка предметов, соответствующих первому предмету.\n\u003cbr\u003e",
                "operationId": "SubjectController.GetAllowedSecondSubjects",
                "parameters": [
                    {
                        "in": "path",
                        "name": "firstSubjectId",
                        "description": "ID первого предмета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список предметов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SubjectResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка получения списка или другая ошибка"
                    }
                }
            }
        },
        "/subjects/{id}": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "description": "Получение информации о предмете по ID.\n\u003cbr\u003e",
                "operationId": "SubjectController.Get",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID предмета для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "lang",
                        "description": "Язык для получения данных, 'ru' или 'kz'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о предмете\"",
                        "schema": {
                            "$ref": "#/definitions/models.SubjectResponse"
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            },
            "put": {
                "tags": [
                    "subjects"
                ],
                "description": "Обновление информации о предмете по ID.\n\u003cbr\u003e",
                "operationId": "SubjectController.Update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID предмета для обновления информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON с обновленными данными о предмете",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Обновление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректный ID, ошибка разбора JSON или другая ошибка"
                    }
                }
            },
            "delete": {
                "tags": [
                    "subjects"
                ],
                "description": "Удаление предмета по ID.\n\u003cbr\u003e",
                "operationId": "SubjectController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID предмета для удаления",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Удаление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        },
        "/unispecdetails/{uid}/{sid}": {
            "get": {
                "tags": [
                    "unispecdetails"
                ],
                "description": "get UniversitySpecialityDetail by university_id and speciality_id\n\u003cbr\u003e",
                "operationId": "UniversitySpecialityDetailController.GetUniversitySpecialityDetail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "university_id",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "Speciality ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UniversitySpecialityDetail"
                        }
                    },
                    "404": {
                        "description": "{string} record not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "unispecdetails"
                ],
                "description": "update UniversitySpecialityDetail by id\n\u003cbr\u003e",
                "operationId": "UniversitySpecialityDetailController.UpdateUniversitySpecialityDetail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "university_id",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "Speciality ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "term",
                        "description": "Term",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "edu_lang",
                        "description": "EduLang",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} update success!"
                    },
                    "400": {
                        "description": "{string} invalid input"
                    }
                }
            },
            "post": {
                "tags": [
                    "unispecdetails"
                ],
                "description": "create UniversitySpecialityDetail\n\u003cbr\u003e",
                "operationId": "UniversitySpecialityDetailController.CreateUniversitySpecialityDetail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "university_id",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "Speciality ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "term",
                        "description": "Term",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "edu_lang",
                        "description": "EduLang",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.UniversitySpecialityDetail"
                    },
                    "400": {
                        "description": "{string} invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "unispecdetails"
                ],
                "description": "delete UniversitySpecialityDetail by university_id and speciality_id\n\u003cbr\u003e",
                "operationId": "UniversitySpecialityDetailController.DeleteUniversitySpecialityDetail",
                "parameters": [
                    {
                        "in": "path",
                        "name": "university_id",
                        "description": "University ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "Speciality ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "{string} record not found"
                    }
                }
            }
        },
        "/universities/": {
            "get": {
                "tags": [
                    "universities"
                ],
                "description": "Получение списка всех университетов.\n\u003cbr\u003e",
                "operationId": "UniversityController.GetAllForAdmin",
                "responses": {
                    "200": {
                        "description": "\"Список университетов\"",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.University"
                            }
                        }
                    },
                    "400": {
                        "description": "ошибка получения списка или другая ошибка"
                    }
                }
            }
        },
        "/universities/assigncity/{universityId}/{cityId}": {
            "put": {
                "tags": [
                    "universities"
                ],
                "description": "Назначение города университету.\n\u003cbr\u003e",
                "operationId": "UniversityController.AssignCityToUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "cityId",
                        "description": "ID города",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Город успешно назначен\""
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/universities/assignserv/{universityId}": {
            "post": {
                "tags": [
                    "universities"
                ],
                "description": "Добавление нескольких сервисов к университету.\n\u003cbr\u003e",
                "operationId": "UniversityController.AddServicesToUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Массив ID сервисов",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Сервисы успешно добавлены к университету\""
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/universities/assignspec/{universityId}/{specialityId}": {
            "post": {
                "tags": [
                    "universities"
                ],
                "description": "Добавление специальности к университету.\n\u003cbr\u003e",
                "operationId": "UniversityController.AddSpecialityToUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "specialityId",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Специальность успешно добавлена к университету\""
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/universities/assignspecialities/{universityId}": {
            "post": {
                "tags": [
                    "universities"
                ],
                "description": "Добавление нескольких специальностей к университету.\n\u003cbr\u003e",
                "operationId": "UniversityController.AddSpecialitiesToUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "universityId",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Массив ID специальностей",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "int64",
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Специальности успешно добавлены к университету\""
                    },
                    "400": {
                        "description": "некорректные ID или другая ошибка"
                    }
                }
            }
        },
        "/universities/deletespec/{universityId}/{speciality_id}": {
            "delete": {
                "tags": [
                    "universities"
                ],
                "description": "удаляет взаимосвязь между университетом и специальностью\n\u003cbr\u003e",
                "operationId": "UniversityController.DeleteSpecialityFromUniversity",
                "parameters": [
                    {
                        "in": "path",
                        "name": "university_id",
                        "description": "ID университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "path",
                        "name": "speciality_id",
                        "description": "ID специальности",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} \"Success\""
                    },
                    "400": {
                        "description": "{string} \"Invalid input\""
                    },
                    "404": {
                        "description": "{string} \"Not Found\""
                    }
                }
            }
        },
        "/universities/search": {
            "get": {
                "tags": [
                    "universities"
                ],
                "description": "Поиск университетов по параметрам.\n\u003cbr\u003e",
                "operationId": "UniversityController.SearchUniversities",
                "parameters": [
                    {
                        "in": "query",
                        "name": "min_score",
                        "description": "Минимальный балл",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "avg_fee",
                        "description": "Средняя цена",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "city_id",
                        "description": "ID города",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "speciality_ids",
                        "description": "Список специальностей в JSON формате, должны передавать массив с id специальнотей",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "service_ids",
                        "description": "Список сервисов в JSON формате, должны передавать массив с id сервисов",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "first_subject_id",
                        "description": "ID первого предмета",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "second_subject_id",
                        "description": "ID второго предмета",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Sort parameter (avg_fee_asc or avg_fee_desc)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "description": "Название университета или его часть",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "study_format",
                        "description": "Формат обучения (full_time, part_time, etc.)",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Номер страницы",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "query",
                        "name": "per_page",
                        "description": "Количество элементов на одной странице",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Список найденных университетов с информацией о пагинации\"",
                        "schema": {
                            "$ref": "#/definitions/models.UniversitySearchResult"
                        }
                    },
                    "400": {
                        "description": "{string} string \"400 ошибка поиска или другая ошибка\""
                    }
                }
            }
        },
        "/universities/universities": {
            "post": {
                "tags": [
                    "universities"
                ],
                "description": "Создает новый университет с привязкой к сервисам и галерее изображений\n\u003cbr\u003e",
                "operationId": "UniversityController.CreateUniversity",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "NameRu",
                        "description": "Название на русском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "NameKz",
                        "description": "Название на казахском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityStatusRu",
                        "description": "Статус университета на русском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityStatusKz",
                        "description": "Статус университета на казахском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Website",
                        "description": "Вебсайт",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "CallCenterNumber",
                        "description": "Номер колл-центра",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "WhatsAppNumber",
                        "description": "Номер WhatsApp",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Address",
                        "description": "Адрес",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityCode",
                        "description": "Код университета",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "StudyFormatRu",
                        "description": "Формат обучения на русском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "StudyFormatKz",
                        "description": "Формат обучения на казахском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationRu",
                        "description": "Аббревиатура на русском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationKz",
                        "description": "Аббревиатура на казахском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "MainImageUrl",
                        "description": "Главное изображение",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "AddressLink",
                        "description": "Ссылка на адрес",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionRu",
                        "description": "Описание на русском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionKz",
                        "description": "Описание на казахском языке",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Rating",
                        "description": "Рейтинг",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Gallery",
                        "description": "Галерея изображений",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "CityId",
                        "description": "ID города",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "ServiceIds",
                        "description": "Список ID сервисов в формате [1,2,3]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "MinScore",
                        "description": "Минимальный балл для университета",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int64} id \"ID созданного университета\""
                    },
                    "400": {
                        "description": "{object} map[string]string \"Error message\""
                    },
                    "500": {
                        "description": "{object} map[string]string \"Error message\""
                    }
                }
            }
        },
        "/universities/universities/{id}": {
            "put": {
                "tags": [
                    "universities"
                ],
                "description": "Update the specified fields of a university\n\u003cbr\u003e",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "NameRu",
                        "description": "Russian name of the university",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "NameKz",
                        "description": "Kazakh name of the university",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityStatusRu",
                        "description": "Russian university status",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityStatusKz",
                        "description": "Kazakh university status",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Website",
                        "description": "Website of the university",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "CallCenterNumber",
                        "description": "Call center number",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "WhatsAppNumber",
                        "description": "WhatsApp number",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Address",
                        "description": "Address of the university",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "UniversityCode",
                        "description": "University code",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "StudyFormatRu",
                        "description": "Russian study format",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "StudyFormatKz",
                        "description": "Kazakh study format",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationRu",
                        "description": "Russian abbreviation",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AbbreviationKz",
                        "description": "Kazakh abbreviation",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "AddressLink",
                        "description": "Address link",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionRu",
                        "description": "Russian description",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "DescriptionKz",
                        "description": "Kazakh description",
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "Rating",
                        "description": "Rating of the university",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "CityId",
                        "description": "City ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "formData",
                        "name": "MainImageUrl",
                        "description": "Main image of the university",
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "Gallery",
                        "description": "Gallery images of the university",
                        "type": "file"
                    },
                    {
                        "in": "formData",
                        "name": "ServiceIds",
                        "description": "Comma-separated list of service IDs",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/map[string]string"
                        }
                    },
                    "400": {
                        "description": "{object} map[string]string"
                    },
                    "404": {
                        "description": "{object} map[string]string"
                    },
                    "500": {
                        "description": "{object} map[string]string"
                    }
                }
            }
        },
        "/universities/{id}": {
            "get": {
                "tags": [
                    "universities"
                ],
                "description": "Получение информации о университете по ID.\n\u003cbr\u003e",
                "operationId": "UniversityController.GetForAdmin",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID университета для получения информации",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "\"Информация о университете\"",
                        "schema": {
                            "$ref": "#/definitions/models.University"
                        }
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            },
            "delete": {
                "tags": [
                    "universities"
                ],
                "description": "Удаление университета по ID.\n\u003cbr\u003e",
                "operationId": "UniversityController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "ID университета для удаления",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "string\t\"Удаление успешно выполнено\""
                    },
                    "400": {
                        "description": "некорректный ID или другая ошибка"
                    }
                }
            }
        }
    },
    "definitions": {
        "CityResponse": {
            "title": "CityResponse",
            "type": "object"
        },
        "QuotaResponse": {
            "title": "QuotaResponse",
            "type": "object"
        },
        "map[string]int": {
            "title": "map[string]int",
            "type": "object"
        },
        "map[string]int64": {
            "title": "map[string]int64",
            "type": "object"
        },
        "map[string]string": {
            "title": "map[string]string",
            "type": "object"
        },
        "models.AnnualGrant": {
            "title": "AnnualGrant",
            "type": "object",
            "properties": {
                "grant_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "year": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.AnnualPoints": {
            "title": "AnnualPoints",
            "type": "object",
            "properties": {
                "min_grant_score": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_score": {
                    "type": "integer",
                    "format": "int64"
                },
                "year": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.City": {
            "title": "City",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "NameKz": {
                    "type": "string"
                },
                "NameRu": {
                    "type": "string"
                },
                "Universities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.University"
                    }
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Gallery": {
            "title": "Gallery",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PhotoUrl": {
                    "type": "string"
                },
                "University": {
                    "$ref": "#/definitions/models.University"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.GetByUniResponseForAdm": {
            "title": "GetByUniResponseForAdm",
            "type": "object",
            "properties": {
                "annual_grants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnnualGrant"
                    }
                },
                "annual_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AnnualPoints"
                    }
                },
                "avg_salary": {
                    "type": "integer",
                    "format": "int64"
                },
                "degree": {
                    "type": "string"
                },
                "education_format_kz": {
                    "type": "string"
                },
                "education_format_ru": {
                    "type": "string"
                },
                "grant_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "min_score": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "integer",
                    "format": "int64"
                },
                "scholarship": {
                    "type": "string"
                },
                "speciality_code": {
                    "type": "string"
                },
                "speciality_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "speciality_name_kz": {
                    "type": "string"
                },
                "speciality_name_ru": {
                    "type": "string"
                },
                "subject_names_kz": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject_names_ru": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "term": {
                    "type": "integer",
                    "format": "int64"
                },
                "university_name_kz": {
                    "type": "string"
                },
                "university_name_ru": {
                    "type": "string"
                }
            }
        },
        "models.PointStat": {
            "title": "PointStat",
            "type": "object",
            "properties": {
                "AvgSalary": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "GrantCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MinGrantScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "MinScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "Price": {
                    "type": "integer",
                    "format": "int64"
                },
                "Speciality": {
                    "$ref": "#/definitions/models.Speciality"
                },
                "University": {
                    "$ref": "#/definitions/models.University"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Year": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Quota": {
            "title": "Quota",
            "type": "object",
            "properties": {
                "Count": {
                    "type": "integer",
                    "format": "int64"
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MaxScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "MinScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "QuotaType": {
                    "type": "string"
                },
                "QuotaTypeKz": {
                    "type": "string"
                },
                "QuotaTypeRu": {
                    "type": "string"
                },
                "Specialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Speciality"
                    }
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.Service": {
            "title": "Service",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NameKz": {
                    "type": "string"
                },
                "NameRu": {
                    "type": "string"
                },
                "Universities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.University"
                    }
                }
            }
        },
        "models.ServiceResponseForAdmin": {
            "title": "ServiceResponseForAdmin",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "NameKz": {
                    "type": "string"
                },
                "NameRu": {
                    "type": "string"
                }
            }
        },
        "models.ServiceResponseForUser": {
            "title": "ServiceResponseForUser",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ImageUrl": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "models.Speciality": {
            "title": "Speciality",
            "type": "object",
            "properties": {
                "AbbreviationKz": {
                    "type": "string"
                },
                "AbbreviationRu": {
                    "type": "string"
                },
                "DescriptionKz": {
                    "type": "string"
                },
                "DescriptionRu": {
                    "type": "string"
                },
                "NameKz": {
                    "type": "string"
                },
                "NameRu": {
                    "type": "string"
                },
                "Scholarship": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "degree": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "point_stats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PointStat"
                    }
                },
                "subject_pair": {
                    "$ref": "#/definitions/models.SubjectPair"
                },
                "universities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.University"
                    }
                },
                "university_terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UniversitySpecialityDetail"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "video_link": {
                    "type": "string"
                }
            }
        },
        "models.SpecialitySearchResult": {
            "title": "SpecialitySearchResult",
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "format": "int64"
                },
                "specialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Speciality"
                    }
                },
                "total_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_pages": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Subject": {
            "title": "Subject",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "NameKz": {
                    "type": "string"
                },
                "NameRu": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.SubjectPair": {
            "title": "SubjectPair",
            "type": "object",
            "properties": {
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Specialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Speciality"
                    }
                },
                "Subject1": {
                    "$ref": "#/definitions/models.Subject"
                },
                "Subject2": {
                    "$ref": "#/definitions/models.Subject"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.SubjectResponse": {
            "title": "SubjectResponse",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "models.University": {
            "title": "University",
            "type": "object",
            "properties": {
                "Abbreviation": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "AddressLink": {
                    "type": "string"
                },
                "AverageFee": {
                    "type": "integer",
                    "format": "int64"
                },
                "CallCenterNumber": {
                    "type": "string"
                },
                "City": {
                    "$ref": "#/definitions/models.City"
                },
                "ContactList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Description": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "Gallery": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Gallery"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MainImageUrl": {
                    "type": "string"
                },
                "MinEntryScore": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "PhotosUrlList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PointStats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PointStat"
                    }
                },
                "Rating": {
                    "type": "string"
                },
                "Services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Service"
                    }
                },
                "SocialMediaList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Specialities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Speciality"
                    }
                },
                "StudyFormat": {
                    "type": "string"
                },
                "StudyFormatKz": {
                    "type": "string"
                },
                "StudyFormatRu": {
                    "type": "string"
                },
                "UniversityCode": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string",
                    "format": "datetime"
                },
                "Website": {
                    "type": "string"
                },
                "WhatsAppNumber": {
                    "type": "string"
                }
            }
        },
        "models.UniversitySearchResult": {
            "title": "UniversitySearchResult",
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "total_pages": {
                    "type": "integer",
                    "format": "int64"
                },
                "universities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.University"
                    }
                }
            }
        },
        "models.UniversitySpecialityDetail": {
            "title": "UniversitySpecialityDetail",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "datetime"
                },
                "edu_lang": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "speciality": {
                    "$ref": "#/definitions/models.Speciality"
                },
                "term": {
                    "type": "integer",
                    "format": "int64"
                },
                "university": {
                    "$ref": "#/definitions/models.University"
                },
                "updated_at": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        }
    },
    "tags": [
        {
            "name": "subjects",
            "description": "SubjectController обрабатывает запросы для работы с предметами.\n"
        },
        {
            "name": "subjectpairs",
            "description": "SubjectPairController обрабатывает запросы для работы с парами предметов.\n"
        },
        {
            "name": "specialities",
            "description": "SpecialityController обрабатывает запросы для работы со специальностями.\n"
        },
        {
            "name": "universities",
            "description": "UniversityController обрабатывает запросы для работы с университетами.\n"
        },
        {
            "name": "quotas",
            "description": "QuotaController handles operations for Quota.\n"
        },
        {
            "name": "services",
            "description": "ServiceController handles operations related to services\n"
        },
        {
            "name": "subjects",
            "description": "SubjectController обрабатывает запросы для работы с предметами.\n"
        },
        {
            "name": "subjectpairs",
            "description": "SubjectPairController обрабатывает запросы для работы с парами предметов.\n"
        },
        {
            "name": "specialities",
            "description": "SpecialityController обрабатывает запросы для работы со специальностями.\n"
        },
        {
            "name": "universities",
            "description": "UniversityController обрабатывает запросы для работы с университетами.\n"
        },
        {
            "name": "quotas",
            "description": "QuotaController handles operations for Quota.\n"
        },
        {
            "name": "services",
            "description": "ServiceController handles operations related to services\n"
        }
    ]
}