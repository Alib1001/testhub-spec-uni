swagger: "2.0"
info:
  title: Testhub universities  API
  description: |
    API for Testhub universities.
  version: 1.0.0
  contact:
    email: superalibek123@gmail.com
basePath: /api
paths:
  /subjectpair/:
    get:
      tags:
      - subjectpair
      description: |-
        Получение списка всех пар предметов.
        <br>
      operationId: SubjectPairController.GetAll
      responses:
        "200":
          description: '"Список пар предметов"'
          schema:
            type: array
            items:
              $ref: '#/definitions/models.SubjectPair'
        "400":
          description: ошибка получения списка или другая ошибка
  /subjectpair/{id}:
    get:
      tags:
      - subjectpair
      description: |-
        Получение информации о паре предметов по ID.
        <br>
      operationId: SubjectPairController.Get
      parameters:
      - in: path
        name: id
        description: ID пары предметов для получения информации
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '"Информация о паре предметов"'
          schema:
            $ref: '#/definitions/models.SubjectPair'
        "400":
          description: некорректный ID или другая ошибка
    delete:
      tags:
      - subjectpair
      description: |-
        Удаление пары предметов по ID.
        <br>
      operationId: SubjectPairController.Delete
      parameters:
      - in: path
        name: id
        description: ID пары предметов для удаления
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: "string\t\"Удаление успешно выполнено\""
        "400":
          description: некорректный ID или другая ошибка
  /subjectpair/{id}/{firstSubjectId}/{secondSubjectId}:
    put:
      tags:
      - subjectpair
      description: |-
        Обновление информации о паре предметов по ID.
        <br>
      operationId: SubjectPairController.Update
      parameters:
      - in: path
        name: id
        description: ID пары предметов для обновления информации
        required: true
        type: integer
        format: int64
      - in: query
        name: firstSubjectId
        description: ID первого предмета
        required: true
        type: integer
        format: int64
      - in: query
        name: secondSubjectId
        description: ID второго предмета
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: "string\t\"Обновление успешно выполнено\""
        "400":
          description: некорректные ID или другая ошибка
  /subjectpair/add/{firstSubjectId}/{secondSubjectId}:
    post:
      tags:
      - subjectpair
      description: |-
        Создание новой пары предметов.
        <br>
      operationId: SubjectPairController.Add
      parameters:
      - in: query
        name: firstSubjectId
        description: ID первого предмета
        required: true
        type: integer
        format: int64
      - in: query
        name: secondSubjectId
        description: ID второго предмета
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '"ID созданной пары предметов"'
          schema:
            $ref: '#/definitions/map[string]int64'
        "400":
          description: некорректные ID или другая ошибка
  /subjectpair/get/{firstSubjectId}/{secondSubjectId}:
    get:
      tags:
      - subjectpair
      description: |-
        Получение ID пары предметов по ID первого и второго предмета.
        <br>
      operationId: SubjectPairController.GetBySubjectIds
      parameters:
      - in: path
        name: firstSubjectId
        description: ID первого предмета
        required: true
        type: integer
        format: int64
      - in: path
        name: secondSubjectId
        description: ID второго предмета
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '"ID пары предметов"'
          schema:
            $ref: '#/definitions/map[string]int'
        "400":
          description: некорректные ID или другая ошибка
  /subjects/:
    get:
      tags:
      - subjects
      description: |-
        Получение списка всех предметов.
        <br>
      operationId: SubjectController.GetAll
      responses:
        "200":
          description: '"Список предметов"'
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Subject'
        "400":
          description: ошибка получения списка или другая ошибка
    post:
      tags:
      - subjects
      description: |-
        Создание нового предмета.
        <br>
      operationId: SubjectController.Create
      parameters:
      - in: body
        name: body
        description: JSON с данными о предмете
        required: true
        schema:
          $ref: '#/definitions/models.Subject'
      responses:
        "200":
          description: '"ID созданного предмета"'
          schema:
            $ref: '#/definitions/map[string]int64'
        "400":
          description: ошибка разбора JSON или другая ошибка
  /subjects/{id}:
    get:
      tags:
      - subjects
      description: |-
        Получение информации о предмете по ID.
        <br>
      operationId: SubjectController.Get
      parameters:
      - in: path
        name: id
        description: ID предмета для получения информации
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '"Информация о предмете"'
          schema:
            $ref: '#/definitions/models.Subject'
        "400":
          description: некорректный ID или другая ошибка
    put:
      tags:
      - subjects
      description: |-
        Обновление информации о предмете по ID.
        <br>
      operationId: SubjectController.Update
      parameters:
      - in: path
        name: id
        description: ID предмета для обновления информации
        required: true
        type: integer
        format: int64
      - in: body
        name: body
        description: JSON с обновленными данными о предмете
        required: true
        schema:
          $ref: '#/definitions/models.Subject'
      responses:
        "200":
          description: "string\t\"Обновление успешно выполнено\""
        "400":
          description: некорректный ID, ошибка разбора JSON или другая ошибка
    delete:
      tags:
      - subjects
      description: |-
        Удаление предмета по ID.
        <br>
      operationId: SubjectController.Delete
      parameters:
      - in: path
        name: id
        description: ID предмета для удаления
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: "string\t\"Удаление успешно выполнено\""
        "400":
          description: некорректный ID или другая ошибка
  /subjects/search:
    get:
      tags:
      - subjects
      description: |-
        Поиск предметов по имени.
        <br>
      operationId: SubjectController.SearchSubjectsByName
      parameters:
      - in: query
        name: name
        description: Имя предмета для поиска
        required: true
        type: string
      responses:
        "200":
          description: '"Список найденных предметов"'
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Subject'
        "400":
          description: ошибка выполнения поиска
  /subjects/secubjects/{firstSubjectId}:
    get:
      tags:
      - subjects
      description: |-
        Получение списка предметов, соответствующих первому предмету.
        <br>
      operationId: SubjectController.GetAllowedSecondSubjects
      parameters:
      - in: path
        name: firstSubjectId
        description: ID первого предмета
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '"Список предметов"'
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Subject'
        "400":
          description: ошибка получения списка или другая ошибка
definitions:
  map[string]int:
    title: map[string]int
    type: object
  map[string]int64:
    title: map[string]int64
    type: object
  models.City:
    title: City
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Name:
        type: string
      Universities:
        type: array
        items:
          $ref: '#/definitions/models.University'
      UpdatedAt:
        type: string
        format: datetime
  models.Quota:
    title: Quota
    type: object
    properties:
      Count:
        type: integer
        format: int64
      CreatedAt:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      MaxScore:
        type: integer
        format: int64
      MinScore:
        type: integer
        format: int64
      QuotaType:
        type: string
      Specialities:
        type: array
        items:
          $ref: '#/definitions/models.Speciality'
      UpdatedAt:
        type: string
        format: datetime
  models.Speciality:
    title: Speciality
    type: object
    properties:
      AnnualGrants:
        type: integer
        format: int64
      Code:
        type: string
      CreatedAt:
        type: string
        format: datetime
      Description:
        type: string
      Id:
        type: integer
        format: int64
      MaxScore:
        type: integer
        format: int64
      MinScore:
        type: integer
        format: int64
      Name:
        type: string
      SubjectPair:
        $ref: '#/definitions/models.SubjectPair'
      Universities:
        type: array
        items:
          $ref: '#/definitions/models.University'
      UpdatedAt:
        type: string
        format: datetime
      VideoLink:
        type: string
  models.Subject:
    title: Subject
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Name:
        type: string
      UpdatedAt:
        type: string
        format: datetime
  models.SubjectPair:
    title: SubjectPair
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Specialities:
        type: array
        items:
          $ref: '#/definitions/models.Speciality'
      Subject1:
        $ref: '#/definitions/models.Subject'
      Subject2:
        $ref: '#/definitions/models.Subject'
      UpdatedAt:
        type: string
        format: datetime
  models.University:
    title: University
    type: object
    properties:
      Abbreviation:
        type: string
      Address:
        type: string
      AverageFee:
        type: integer
        format: int64
      City:
        $ref: '#/definitions/models.City'
      ContactList:
        type: array
        items:
          type: string
      CreatedAt:
        type: string
        format: datetime
      Description:
        type: string
      HasDormitory:
        type: boolean
      HasMilitaryDept:
        type: boolean
      Id:
        type: integer
        format: int64
      MinEntryScore:
        type: integer
        format: int64
      Name:
        type: string
      PhotosUrlList:
        type: array
        items:
          type: string
      ProfileImageUrl:
        type: string
      SocialMediaList:
        type: array
        items:
          type: string
      Specialities:
        type: array
        items:
          $ref: '#/definitions/models.Speciality'
      UniversityCode:
        type: string
      UniversityStatus:
        type: string
      UpdatedAt:
        type: string
        format: datetime
      Website:
        type: string
  models.User:
    title: User
    type: object
    properties:
      CreatedAt:
        type: string
        format: datetime
      FirstName:
        type: string
      Id:
        type: integer
        format: int64
      LastName:
        type: string
      Password:
        type: string
      ProfileImageURL:
        type: string
      Role:
        type: string
      UpdatedAt:
        type: string
        format: datetime
      Username:
        type: string
tags:
- name: subjects
  description: |
    SubjectController обрабатывает запросы для работы с предметами.
- name: subjectpair
  description: |
    SubjectPairController обрабатывает запросы для работы с парами предметов.
